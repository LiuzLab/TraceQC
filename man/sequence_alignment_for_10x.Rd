% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sequence_alignment.R
\name{sequence_alignment_for_10x}
\alias{sequence_alignment_for_10x}
\title{Function for a sequence alignment between the reference file and sample for 10x data.}
\usage{
sequence_alignment_for_10x(
  input_file,
  ref_file,
  output_file = "aligned_reads.txt",
  python_path = "python3",
  match = 2,
  mismatch = -2,
  gapopen = -6,
  gapextension = -0.1,
  penalize_end_gaps = 1,
  ncores = 4
)
}
\arguments{
\item{input_file}{A FASTQ file path (required).}

\item{ref_file}{A path of a reference sequence file (required).}

\item{output_file}{The output path. An output of the alignment will be
stored at the path (default: "aligned_reads.txt").}

\item{python_path}{The path to Python. (default: "python3").}

\item{match}{The score for a correct basepair matching (default: 2).}

\item{mismatch}{The penalty score for a basepair mismatching (default: -2).}

\item{gapopen}{The gap opening score for the alignment (default: -6).}

\item{gapextension}{The gap extension score for the alignment (default: -0.1).}

\item{penalize_end_gaps}{Whether penalize the end gap, the value should take 0/1 (default: 1).}

\item{ncores}{The number of cores for the parallel processing.}
}
\value{
It returns a data frame of the alignment result
if `return_df' is `T' and `NULL' otherwise.
}
\description{
The function is an wrapper of a python function which performs
a global pairwise sequence alignment by biopython package.
}
\examples{
input_file <- system.file("extdata/test_data/raw_sequence","carlin_example.bam",package="TraceQC")
output_file <- "./aligned_reads.txt"
sequence_alignment_for_10x(input_file=input_file,ref_file=ref_file,
                           output_file=output_file)
}
